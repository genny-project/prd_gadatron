package life.genny.rules;

import java.util.List;
import java.util.ArrayList;
import life.genny.qwandaq.entity.SearchEntity;
import life.genny.qwandaq.utils.CacheUtils;
import life.genny.qwandaq.models.GennySettings;
import life.genny.qwandaq.models.UserToken;
import life.genny.qwandaq.message.QEventMessage;
import life.genny.qwandaq.attribute.AttributeInteger;

rule "SBE_LOGBOOK"
	ruleflow-group 'sidebar'
	no-loop true
	when
		not SearchEntity (code == "SBE_LOGBOOK")
		userToken : UserToken()
	then
		System.out.println("Generate " + drools.getRule().getName());

		SearchEntity searchBE = new SearchEntity("SBE_LOGBOOK", "Logbook")
			.addFilter("PRI_CODE", SearchEntity.StringFilter.LIKE, "JNL_%")
			.addSort("PRI_JOURNAL_DATE", "Date", SearchEntity.Sort.ASC)
			.addColumn("PRI_JOURNAL_DATE", "Date")
			.addColumn("PRI_JOURNAL_HOURS", "Hours")
			.addColumn("PRI_STATUS", "Status")
			.addColumn("PRI_JOURNAL_TASKS", "Roles and Responsibilities")
			.addColumn("PRI_JOURNAL_LEARNING_OUTCOMES", "Learning Outcomes")
			.addColumn("PRI_HAS_DOWNLOAD_LINK", " ")
			.setDisplayMode("journal")
			.setPageStart(0)
			.setPageSize(1000);

        AttributeInteger priIndex = new AttributeInteger("PRI_INDEX", "PRI_INDEX");
        searchBE.addAttribute(priIndex, 1.0, 1);

		searchBE.setRealm(userToken.getRealm());
        CacheUtils.putObject(userToken.getRealm(), searchBE.getCode(), searchBE);
end
