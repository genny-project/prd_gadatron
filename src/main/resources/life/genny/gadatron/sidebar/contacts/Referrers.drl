package life.genny.rules;

import java.util.List;
import java.util.ArrayList;
import life.genny.qwandaq.entity.SearchEntity;
import life.genny.qwandaq.utils.CacheUtils;
import life.genny.qwandaq.models.GennySettings;
import life.genny.qwandaq.models.UserToken;
import life.genny.qwandaq.message.QEventMessage;
import life.genny.qwandaq.attribute.AttributeInteger;

rule "SBE_REFERRERS"
    ruleflow-group 'sidebar'
     no-loop true
    when
       not  SearchEntity (code == "SBE_REFERRERS")
       userToken : UserToken()
     then
     	System.out.println("Generate " + drools.getRule().getName());

		SearchEntity searchBE = new SearchEntity("SBE_REFERRERS", "Referrers")
			/* Sorts */
			.addSort("PRI_NAME","Name",SearchEntity.Sort.ASC)
			
			/* Filters */
			.addFilter("PRI_CODE", SearchEntity.StringFilter.LIKE, "PER_%")
			.addFilter("PRI_IS_REF_PART_REP", true)
			
			/* Table Columns */
			.addColumn("PRI_IMAGE_URL", "Profile Picture")
			.addColumn("PRI_NAME", "Name")
			.addColumn("PRI_STATUS", "Status")
			.addColumn("PRI_EMAIL", "Email")
			.addColumn("PRI_MOBILE", "Mobile")

			/* Filterable Columns */
			.addFilterableColumn("PRI_NAME", "Name")

			/* Table actions */
			.addAction("PRI_EVENT_VIEW", "View Profile")
			.setPageStart(0).setPageSize(GennySettings.defaultBucketSize());

        AttributeInteger priIndex = new AttributeInteger("PRI_INDEX", "PRI_INDEX");
        searchBE.addAttribute(priIndex, 1.0, 1);

		searchBE.setRealm(userToken.getRealm());
        CacheUtils.putObject(userToken.getRealm(), searchBE.getCode(), searchBE);

end
